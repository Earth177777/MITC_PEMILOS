version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: election-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_PATH=/app/db/electronic_voting_system.sqlite
      - DATABASE_LOGGING=false
      - PORT=3001
    volumes:
      - backend_data:/app/db
    networks:
      - election-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: election-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - election-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development backend service
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: election-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_PATH=/app/db/electronic_voting_system.sqlite
      - DATABASE_LOGGING=true
      - PORT=3001
    volumes:
      - ./backend:/app
      - backend_dev_data:/app/db
      - /app/node_modules
    networks:
      - election-network
    profiles:
      - dev

  # Development frontend service
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: election-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - election-network
    profiles:
      - dev

volumes:
  backend_data:
    driver: local
  backend_dev_data:
    driver: local

networks:
  election-network:
    driver: bridge